/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Group;

import Main.MainWindow;
import java.awt.Cursor;
import java.io.File;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PLEX
 */
public class TimeTable extends javax.swing.JFrame {

    /**
     * Creates new form TimeTable
     */
    private MainWindow mainWindow;

    public TimeTable(MainWindow mainWindow) {
        initComponents();
        loadLecturerName();
        loadGroup();
        loadLocation();
        this.mainWindow = mainWindow;

    }

    public TimeTable() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lecturer = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        group = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        location = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GT.setBackground(new java.awt.Color(255, 255, 255));
        GT.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time Slot", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 910, 490));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Lecture");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 80, 40));

        lecturer.setEditable(true);
        lecturer.setFocusable(false);
        jPanel4.add(lecturer, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 330, 40));

        jButton1.setBackground(new java.awt.Color(0, 153, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Generate");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 190, 40));

        jButton2.setBackground(new java.awt.Color(0, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Print");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 190, 40));

        jTabbedPane1.addTab("Lecturer", jPanel4);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Group");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 30, 60, 40));

        group.setEditable(true);
        group.setFocusable(false);
        jPanel1.add(group, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 29, 330, 40));

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Generate");
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 30, 190, 40));

        jButton4.setBackground(new java.awt.Color(0, 204, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Print");
        jButton4.setBorderPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, 190, 40));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time Slot", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 910, 490));

        jTabbedPane1.addTab("Student", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Location");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 30, 70, 40));

        location.setEditable(true);
        location.setFocusable(false);
        jPanel3.add(location, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 34, 330, 40));

        jButton5.setBackground(new java.awt.Color(0, 153, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Generate");
        jButton5.setBorderPainted(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, 190, 40));

        jButton6.setBackground(new java.awt.Color(0, 204, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Print");
        jButton6.setBorderPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 30, 190, 40));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Time Slot", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 110, 910, 470));

        jTabbedPane1.addTab("Location", jPanel3);

        GT.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 65, 970, 630));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Generate Timetable");
        GT.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, -1, -1));

        getContentPane().add(GT, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.DB.search("SELECT nar.day,nar.startTime,nar.endTime,l.name,sg.sub_groups_id,su.code,nar.room FROM not_available_time nat JOIN not_available_rooms nar on nat.notAvlRoom_id=nar.notAvlRoom_id JOIN lecturer l on nat.lecturer_id=l.idlecturer JOIN student_groups sg on nat.group_id=sg.idstudent_groups JOIN lecture_sessions ls on nat.session_id=ls.idlecture_sessions JOIN subjects su on ls.subjects_id=su.idsubjects where l.name='" + lecturer.getSelectedItem().toString() + "'");
            while (rs.next()) {

                Vector v = new Vector();
                if (rs.getString(1).equals("Monday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Tuesday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Wednesday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Thursday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                } else if (rs.getString(1).equals("Friday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.DB.search("SELECT nar.day,nar.startTime,nar.endTime,l.name,sg.sub_groups_id,su.code,nar.room FROM not_available_time nat JOIN not_available_rooms nar on nat.notAvlRoom_id=nar.notAvlRoom_id JOIN lecturer l on nat.lecturer_id=l.idlecturer JOIN student_groups sg on nat.group_id=sg.idstudent_groups JOIN lecture_sessions ls on nat.session_id=ls.idlecture_sessions JOIN subjects su on ls.subjects_id=su.idsubjects where sg.sub_groups_id='" + group.getSelectedItem().toString() + "'");
            while (rs.next()) {

                Vector v = new Vector();
                if (rs.getString(1).equals("Monday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Tuesday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Wednesday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Thursday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                } else if (rs.getString(1).equals("Friday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable3.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.DB.search("SELECT nar.day,nar.startTime,nar.endTime,l.name,sg.sub_groups_id,su.code,nar.room FROM not_available_time nat JOIN not_available_rooms nar on nat.notAvlRoom_id=nar.notAvlRoom_id JOIN lecturer l on nat.lecturer_id=l.idlecturer JOIN student_groups sg on nat.group_id=sg.idstudent_groups JOIN lecture_sessions ls on nat.session_id=ls.idlecture_sessions JOIN subjects su on ls.subjects_id=su.idsubjects where nar.room='" + location.getSelectedItem().toString() + "'");
            while (rs.next()) {

                Vector v = new Vector();
                if (rs.getString(1).equals("Monday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Tuesday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Wednesday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                    v.add("");
                } else if (rs.getString(1).equals("Thursday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                    v.add("");
                } else if (rs.getString(1).equals("Friday")) {
                    v.add(rs.getString(2) + " - " + rs.getString(3));
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add("");
                    v.add(rs.getString(4) + " , " + rs.getString(5) + " , " + rs.getString(6) + " , " + rs.getString(7));
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd__HH-mm-ss");
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Save As");
        chooser.setSelectedFile(new File("TimeTableReport" + sdf.format(new Date())));
        chooser.setFileFilter(new FileNameExtensionFilter("Excel Workbook (* .xlsx)", ".xlsx"));
        int retrival = chooser.showSaveDialog(null);

        if (retrival == JFileChooser.APPROVE_OPTION) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

            String saveFile = chooser.getSelectedFile().getAbsolutePath().replace("\\", "/") + ".xlsx";
            ExcelReport.writeExcel("timetable", saveFile, "where l.name='" + lecturer.getSelectedItem().toString() + "'");
            setCursor(null);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd__HH-mm-ss");
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Save As");
        chooser.setSelectedFile(new File("TimeTableReport" + sdf.format(new Date())));
        chooser.setFileFilter(new FileNameExtensionFilter("Excel Workbook (* .xlsx)", ".xlsx"));
        int retrival = chooser.showSaveDialog(null);

        if (retrival == JFileChooser.APPROVE_OPTION) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

            String saveFile = chooser.getSelectedFile().getAbsolutePath().replace("\\", "/") + ".xlsx";
            ExcelReport.writeExcel("timetable", saveFile, "where sg.sub_groups_id='" + group.getSelectedItem().toString() + "'");
            setCursor(null);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd__HH-mm-ss");
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Save As");
        chooser.setSelectedFile(new File("TimeTableReport" + sdf.format(new Date())));
        chooser.setFileFilter(new FileNameExtensionFilter("Excel Workbook (* .xlsx)", ".xlsx"));
        int retrival = chooser.showSaveDialog(null);

        if (retrival == JFileChooser.APPROVE_OPTION) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

            String saveFile = chooser.getSelectedFile().getAbsolutePath().replace("\\", "/") + ".xlsx";
            ExcelReport.writeExcel("timetable", saveFile, "where nar.room='" + location.getSelectedItem().toString() + "'");
            setCursor(null);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimeTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public final javax.swing.JPanel GT = new javax.swing.JPanel();
    private javax.swing.JComboBox<String> group;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JComboBox<String> lecturer;
    private javax.swing.JComboBox<String> location;
    // End of variables declaration//GEN-END:variables

    private void loadLecturerName() {
        try {
            lecturer.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct name from lecturer");
            while (rs.next()) {
                lecturer.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void loadGroup() {
        try {
            group.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct sub_groups_id from student_groups");
            while (rs.next()) {
                group.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void loadLocation() {
        try {
            location.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct room_name from building");
            while (rs.next()) {
                location.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }
}
