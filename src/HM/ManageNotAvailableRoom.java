/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HM;

import Main.MainWindow;
import com.mysql.jdbc.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nisal
 */
public final class ManageNotAvailableRoom extends javax.swing.JFrame {

    private static  String notAvlRoomID = "";
 
    
    

    /**
     * Creates new form ManageNotAvailableRoom
     */
    
    private MainWindow mainWindow;

  
    public ManageNotAvailableRoom(MainWindow mainWindow) {
        initComponents();
        RoomName();
        loadTableData();
        this.mainWindow = mainWindow;
        
  }
    
    public  void RoomName(){
     
        try {
            selectroomJbox.addItem("<-Select->");
            ResultSet rs = DB.DB.search( "SELECT building.room_name FROM building");

            while (rs.next()) {
                
                selectroomJbox.addItem(rs.getString(1));
                
            }
        } catch (Exception e) {
          e.printStackTrace();
        }
      
        
    }
    
    public void clearFields(){
        
        selectroomJbox.setSelectedIndex(0);
        dayJBox.setSelectedIndex(0);
        etimeTxt.setText("");
        stimeTxt.setText("");
    }
    
    public void loadTableData(){
         try {
       
            ResultSet  rs = DB.DB.search("SELECT * FROM not_available_rooms WHERE not_available_rooms.status != '0' ");
            
             DefaultTableModel tableModel = (DefaultTableModel)jTable2.getModel();
             tableModel.setRowCount(0);
             
            while (rs.next()) {
               Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(5));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                
              
              tableModel.addRow(v);
             
            }
        } catch (Exception e) {
            e.printStackTrace();
             JOptionPane.showMessageDialog(null, e);
        }
        
    }
    public void deleteRow(){
               try {
             DB.DB.iud(" UPDATE not_available_rooms SET status = '0' WHERE not_available_rooms.notAvlRoom_id = '" + notAvlRoomID + "'");
           
            JOptionPane.showMessageDialog(rootPane, "Successfully Deleted");
            loadTableData();
            clearFields();
        } catch (Exception e) {
             JOptionPane.showMessageDialog(rootPane, "Deleted unsuccess");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selectroomJbox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        etimeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        stimeTxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        dayJBox = new javax.swing.JComboBox<>();
        jUpdatebtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MNAR.setBackground(new java.awt.Color(255, 255, 255));
        MNAR.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Select Room");
        MNAR.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 400, 120, 40));

        selectroomJbox.setEditable(true);
        selectroomJbox.setFocusable(false);
        selectroomJbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectroomJboxActionPerformed(evt);
            }
        });
        MNAR.add(selectroomJbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 330, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Start Time");
        MNAR.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 400, -1, 40));
        MNAR.add(etimeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 460, 330, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Select Day");
        MNAR.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, 120, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("End Time");
        MNAR.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 460, -1, 40));

        stimeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stimeTxtActionPerformed(evt);
            }
        });
        MNAR.add(stimeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 400, 330, 40));

        jButton2.setBackground(java.awt.Color.red);
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Delete");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        MNAR.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 620, 190, 40));

        jButton3.setBackground(new java.awt.Color(0, 153, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Add Session");
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        MNAR.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, 190, 40));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Manage Not Available Rooms");
        MNAR.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Room Name", "Day", "Start Time", "End Time"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        MNAR.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 1010, 280));

        dayJBox.setEditable(true);
        dayJBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<-Select->", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        dayJBox.setFocusable(false);
        dayJBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayJBoxActionPerformed(evt);
            }
        });
        MNAR.add(dayJBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 460, 330, 40));

        jUpdatebtn.setBackground(new java.awt.Color(0, 204, 255));
        jUpdatebtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jUpdatebtn.setForeground(new java.awt.Color(255, 255, 255));
        jUpdatebtn.setText("Update");
        jUpdatebtn.setBorderPainted(false);
        jUpdatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdatebtnActionPerformed(evt);
            }
        });
        MNAR.add(jUpdatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 620, 190, 40));

        getContentPane().add(MNAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectroomJboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectroomJboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectroomJboxActionPerformed

    private void stimeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stimeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stimeTxtActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       //ADD session Btn
        try {
            if (selectroomJbox.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select the Room");
            } else if (dayJBox.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select a Day");
            }else if (stimeTxt.getText().toString().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Insert Start Time");
            }else if (etimeTxt.getText().toString().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Insert End Time");
            } else {
                String day = dayJBox.getSelectedItem().toString();
                String room = selectroomJbox.getSelectedItem().toString();
                String startTime = stimeTxt.getText().toString();
                String endTime = etimeTxt.getText().toString();
               
                DB.DB.iud("INSERT INTO `not_available_rooms` (`notAvlRoom_id`, `room`, `startTime`, `endTime`, `day`) VALUES (NULL, '"+room+"', '"+startTime+"', '"+endTime+"', '"+day+"')");
             
                JOptionPane.showMessageDialog(rootPane, "Successfully Saved");
                clearFields();
                loadTableData();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
       
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // Tabled Mouse Clicked row select
          int selectedRow = jTable2.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            
            dayJBox.setSelectedItem(dtm.getValueAt(selectedRow, 2).toString());
            selectroomJbox.setSelectedItem(dtm.getValueAt(selectedRow, 1).toString());
            stimeTxt.setText(dtm.getValueAt(selectedRow, 3).toString());
            etimeTxt.setText(dtm.getValueAt(selectedRow, 4).toString());
            notAvlRoomID = dtm.getValueAt(selectedRow, 0).toString();
        }

    }//GEN-LAST:event_jTable2MouseClicked

    private void dayJBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayJBoxActionPerformed
       
    }//GEN-LAST:event_dayJBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Delete Button
        deleteRow();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jUpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdatebtnActionPerformed
        //update button implementation
         try {
                String day = dayJBox.getSelectedItem().toString();
                String room = selectroomJbox.getSelectedItem().toString();
                String startTime = stimeTxt.getText().toString();
                String endTime = etimeTxt.getText().toString();
             DB.DB.iud(" UPDATE not_available_rooms SET room = '"+room+"',startTime='"+startTime+"',endTime='"+endTime+"',day='"+day+"' WHERE not_available_rooms.notAvlRoom_id = '" + notAvlRoomID + "'");
           
            JOptionPane.showMessageDialog(rootPane, "Successfully updated");
            loadTableData();
            clearFields();
        } catch (Exception e) {
             JOptionPane.showMessageDialog(rootPane, "updated unsuccess");
            e.printStackTrace();
        }
      

    }//GEN-LAST:event_jUpdatebtnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ManageNotAvailableRoom().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public final javax.swing.JPanel MNAR = new javax.swing.JPanel();
    private javax.swing.JComboBox<String> dayJBox;
    private javax.swing.JTextField etimeTxt;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jUpdatebtn;
    private javax.swing.JComboBox<String> selectroomJbox;
    private javax.swing.JTextField stimeTxt;
    // End of variables declaration//GEN-END:variables
}
