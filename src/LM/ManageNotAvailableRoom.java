/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LM;

import com.mysql.jdbc.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nisal
 */
public class ManageNotAvailableRoom extends javax.swing.JFrame {
    private static Connection con = null;
    private static Statement stmt = null;
    private static ResultSet rs = null;
    private static  String notAvlRoomID = "";
    
    

    /**
     * Creates new form ManageNotAvailableRoom
     */
    public ManageNotAvailableRoom() { 
        initComponents();
        RoomName();
        loadTableData();
       
    }
    
    public  void RoomName(){
         try {
             selectroomJbox.addItem("<-Select->");
            con = (Connection) DBconnection.getConnection();
            stmt = con.createStatement();
            String sql = "SELECT building.room_name FROM building";
            rs = stmt.executeQuery(sql);
//            jSelectID.removeAllItems();
            while (rs.next()) {
              
               selectroomJbox.addItem(rs.getString(1));
               
              
             
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }
    
    public void clearFields(){
        
        selectroomJbox.setSelectedIndex(0);
        dayJBox.setSelectedIndex(0);
        etimeTxt.setText("");
        stimeTxt.setText("");
    }
    
    public void loadTableData(){
         try {
            con = (Connection) DBconnection.getConnection();
            stmt = con.createStatement();
            String sql = "SELECT * FROM not_available_rooms WHERE not_available_rooms.status != '0' ";
            rs = stmt.executeQuery(sql);
             DefaultTableModel tableModel = (DefaultTableModel)jTable2.getModel();
             tableModel.setRowCount(0);
             
            while (rs.next()) {
               Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(5));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                
              
              tableModel.addRow(v);
             
            }
        } catch (SQLException e) {
            e.printStackTrace();
             JOptionPane.showMessageDialog(null, e);
        }
        
    }
    public void deleteRow(){
               try {
            String sql = (" UPDATE not_available_rooms SET status = '0' WHERE not_available_rooms.notAvlRoom_id = '" + notAvlRoomID + "'");
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(rootPane, "Successfully Deleted");
            loadTableData();
            clearFields();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selectroomJbox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        etimeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        stimeTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        dayJBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Room");

        selectroomJbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectroomJboxActionPerformed(evt);
            }
        });

        jLabel3.setText("Start Time");

        jLabel2.setText("Select Day");

        jLabel4.setText("End Time");

        stimeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stimeTxtActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add Session");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Manage Not Available Rooms");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Room Name", "Day", "Start Time", "End Time"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        dayJBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<-Select->", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        dayJBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayJBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(selectroomJbox, 0, 136, Short.MAX_VALUE)
                            .addComponent(dayJBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(174, 174, 174)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(etimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(jButton3)))
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(280, 280, 280))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(selectroomJbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(stimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(etimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayJBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectroomJboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectroomJboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectroomJboxActionPerformed

    private void stimeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stimeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stimeTxtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       //ADD session Btn
        try {
            if (selectroomJbox.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select the Room");
            } else if (dayJBox.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select a Day");
            }else if (stimeTxt.getText().toString().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Insert Start Time");
            }else if (etimeTxt.getText().toString().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Insert End Time");
            } else {
                String day = dayJBox.getSelectedItem().toString();
                String room = selectroomJbox.getSelectedItem().toString();
                String startTime = stimeTxt.getText().toString();
                String endTime = etimeTxt.getText().toString();
               
                String sql =("INSERT INTO `not_available_rooms` (`notAvlRoom_id`, `room`, `startTime`, `endTime`, `day`) VALUES (NULL, '"+room+"', '"+startTime+"', '"+endTime+"', '"+day+"')");
                stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(rootPane, "Successfully Saved");
                clearFields();
                loadTableData();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
       
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // Tabled Mouse Clicked row select
          int selectedRow = jTable2.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel dtm = (DefaultTableModel) jTable2.getModel();
            
            dayJBox.setSelectedItem(dtm.getValueAt(selectedRow, 2).toString());
            selectroomJbox.setSelectedItem(dtm.getValueAt(selectedRow, 1).toString());
            stimeTxt.setText(dtm.getValueAt(selectedRow, 3).toString());
            etimeTxt.setText(dtm.getValueAt(selectedRow, 4).toString());
            notAvlRoomID = dtm.getValueAt(selectedRow, 0).toString();
        }

    }//GEN-LAST:event_jTable2MouseClicked

    private void dayJBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayJBoxActionPerformed
       
    }//GEN-LAST:event_dayJBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Delete Button
        deleteRow();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageNotAvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageNotAvailableRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dayJBox;
    private javax.swing.JTextField etimeTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> selectroomJbox;
    private javax.swing.JTextField stimeTxt;
    // End of variables declaration//GEN-END:variables
}
