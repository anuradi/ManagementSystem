/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LM;

import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thilona
 */
public class ManageSession extends javax.swing.JFrame {

    String sessionid = "";

    /**
     * Creates new form ManageSession
     */
    public ManageSession() {
        initComponents();
        loadTableData();
        loadLecturer();
        loadTag();
        loadGroup();
        loadSubject();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        snoofstd = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        sduration = new javax.swing.JTextField();
        sgroup = new javax.swing.JComboBox<>();
        stag = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        ssubject = new javax.swing.JComboBox<>();
        scode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        slecture = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Manage Session");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 56, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Lecturer", "Subject Code", "Subject Name", "Group ID", "Tag", "No Of Students", "Hours"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 109, 561, 151));

        jLabel7.setText("No Of Students");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 331, -1, -1));
        getContentPane().add(snoofstd, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 328, 186, -1));

        jLabel8.setText("Duration");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 371, -1, -1));
        getContentPane().add(sduration, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 368, 186, -1));

        getContentPane().add(sgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 367, 188, -1));

        getContentPane().add(stag, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 327, 188, -1));

        jLabel2.setText("Select Lecturer");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 291, -1, -1));

        ssubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssubjectActionPerformed(evt);
            }
        });
        getContentPane().add(ssubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 407, 188, -1));

        scode.setEditable(false);
        getContentPane().add(scode, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 288, 186, -1));

        jLabel4.setText("Select Group");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 371, -1, -1));

        jLabel3.setText("Select Tag");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 331, -1, -1));

        getContentPane().add(slecture, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 287, 188, -1));

        jLabel5.setText("Select Subject");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 411, -1, -1));

        jLabel6.setText("Subject Code");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 291, -1, -1));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(153, 204, 255));
        jButton1.setText("Update");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, 120, -1));

        jButton2.setBackground(new java.awt.Color(255, 204, 102));
        jButton2.setText("Delete");
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, 120, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ssubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssubjectActionPerformed
        if (ssubject.getSelectedItem() != null) {
            try {
                ResultSet rs = DB.DB.search("select code from subjects where name='" + ssubject.getSelectedItem().toString() + "'");
                while (rs.next()) {
                    scode.setText(rs.getString(1));
                }
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_ssubjectActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int selectedRow = jTable1.getSelectedRow();
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        if (selectedRow != -1) {
            slecture.setSelectedItem(dtm.getValueAt(selectedRow, 1).toString());
            stag.setSelectedItem(dtm.getValueAt(selectedRow, 5).toString());
            sgroup.setSelectedItem(dtm.getValueAt(selectedRow, 4).toString());
            ssubject.setSelectedItem(dtm.getValueAt(selectedRow, 3).toString());
            scode.setText(dtm.getValueAt(selectedRow, 2).toString());
            snoofstd.setText(dtm.getValueAt(selectedRow, 6).toString());
            sduration.setText(dtm.getValueAt(selectedRow, 7).toString());
            sessionid = dtm.getValueAt(selectedRow, 0).toString();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (slecture.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select the lecturer");
            } else if (stag.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select the tag");
            } else if (sgroup.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select the group");
            } else if (ssubject.getSelectedItem().toString().equals("<-Select->")) {
                JOptionPane.showMessageDialog(rootPane, "Select the subject");
            } else if (scode.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Subject code is empty");
            } else if (snoofstd.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "No of students is empty");
            } else if (sduration.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Duration is empty");
            } else {
                String lecture = slecture.getSelectedItem().toString();
                String tag = stag.getSelectedItem().toString();
                String group = sgroup.getSelectedItem().toString();
                String subject = ssubject.getSelectedItem().toString();
                String lectureid = "";
                String tagid = "";
                String groupid = "";
                String subjectid = "";
                ResultSet rs1 = DB.DB.search("select idlecturer from lecturer where name='" + lecture + "'");
                if (rs1.first()) {
                    lectureid = rs1.getString(1);
                }
                ResultSet rs2 = DB.DB.search("select idtags from tags where name='" + tag + "'");
                if (rs2.first()) {
                    tagid = rs2.getString(1);
                }
                ResultSet rs3 = DB.DB.search("select idstudent_groups from student_groups where groups_id='" + group + "'");
                if (rs3.first()) {
                    groupid = rs3.getString(1);
                }

                ResultSet rs4 = DB.DB.search("select idsubjects from subjects where name='" + subject + "'");
                if (rs4.first()) {
                    subjectid = rs4.getString(1);
                }
                DB.DB.iud("update lecture_sessions set subject_code='" + ssubject.getSelectedItem().toString() + "', std_count='" + snoofstd.getText() + "', duration='" + sduration.getText() + "', lecturer_id='" + lectureid + "', subjects_id='" + subjectid + "', tags_id='" + tagid + "', group_id='" + groupid + "' where idlecture_sessions='" + sessionid + "'");
                JOptionPane.showMessageDialog(rootPane, "Successfully Updated");
                loadTableData();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         deleteSession();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageSession().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField scode;
    private javax.swing.JTextField sduration;
    private javax.swing.JComboBox<String> sgroup;
    private javax.swing.JComboBox<String> slecture;
    private javax.swing.JTextField snoofstd;
    private javax.swing.JComboBox<String> ssubject;
    private javax.swing.JComboBox<String> stag;
    // End of variables declaration//GEN-END:variables
       private void loadTableData() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs = DB.DB.search("select ls.idlecture_sessions,l.name,ls.subject_code,sg.groups_id,s.name,t.name,ls.std_count,ls.duration from lecture_sessions ls JOIN lecturer l on ls.lecturer_id=l.idlecturer JOIN subjects s on ls.subjects_id=s.idsubjects JOIN tags t on ls.tags_id=t.idtags JOIN student_groups sg on ls.group_id=sg.idstudent_groups where ls.status!='deactive'");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(5));
                v.add(rs.getString(4));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadLecturer() {
        try {
            slecture.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct name from lecturer");
            while (rs.next()) {
                slecture.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void loadTag() {
        try {
            stag.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct name from tags");
            while (rs.next()) {
                stag.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void loadGroup() {
        try {
            sgroup.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct groups_id from student_groups");
            while (rs.next()) {
                sgroup.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void loadSubject() {
        try {
            ssubject.addItem("<-Select->");
            ResultSet rs = DB.DB.search("select distinct name from subjects");
            while (rs.next()) {
                ssubject.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void clearFields() {
        scode.setText("");
        snoofstd.setText("");
        sduration.setText("");
    }

    private void deleteSession() {
        try {
            DB.DB.iud("update lecture_sessions set status='deactive' where idlecture_sessions='" + sessionid + "'");
            JOptionPane.showMessageDialog(rootPane, "Successfully Deleted");
            loadTableData();
            slecture.setSelectedItem("<-Select->");
            stag.setSelectedItem("<-Select->");
            sgroup.setSelectedItem("<-Select->");
            ssubject.setSelectedItem("<-Select->");
            clearFields();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
